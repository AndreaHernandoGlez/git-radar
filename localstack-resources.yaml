AWSTemplateFormatVersion: '2010-09-09'
Resources:
  GitradarArtifactsBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: gitradar-artifacts

  GitradarDatalakeBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: gitradar-datalake

  GitRadarCodeFilesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: git-radar-codefiles

  TokenDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: TokenDB
      AttributeDefinitions:
        - AttributeName: token
          AttributeType: S
      KeySchema:
        - AttributeName: token
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  CodeMetricsDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: CodeMetrics
      AttributeDefinitions:
        - AttributeName: metricId
          AttributeType: S
      KeySchema:
        - AttributeName: metricId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1

  TokenizerLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: tokenizers.TokenizerLambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: java11
      Code:
        S3Bucket: !Ref GitradarArtifactsBucket
        S3Key: lambda/tokenizer.jar
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref GitRadarCodeFilesBucket
            Events: s3:ObjectCreated:*

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: LambdaS3DynamoDBPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:ListBucket
                  - dynamodb:PutItem
                Resource: '*'
  TokenQueryLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: TokenizerLambdaHandler.TokenQueryLambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: java11
      Code:
        S3Bucket: !Ref GitradarArtifactsBucket
        S3Key: lambda/token-query.jar

  CodeMetricsCalculatorLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      Handler: code.metrics.CodeMetricsCalculatorLambdaHandler
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: java11
      Code:
        S3Bucket: !Ref GitradarArtifactsBucket
        S3Key: lambda/code-metrics-calculator.jar
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref GitRadarCodeFilesBucket
            Events: s3:ObjectCreated:*

Outputs:
  GitradarArtifactsBucketName:
    Value: !Ref GitradarArtifactsBucket

  GitradarDatalakeBucketName:
    Value: !Ref GitradarDatalakeBucket

  GitRadarCodeFilesBucketName:
    Value: !Ref GitRadarCodeFilesBucket

  TokenDatabaseName:
    Value: !Ref TokenDatabase

  CodeMetricsDatabaseName:
    Value: !Ref CodeMetricsDatabase

  TokenizerLambdaFunctionArn:
    Value: !GetAtt TokenizerLambdaFunction.Arn

  TokenQueryLambdaFunctionArn:
    Value: !GetAtt TokenQueryLambdaFunction.Arn

  CodeMetricsCalculatorLambdaFunctionArn:
    Value: !GetAtt CodeMetricsCalculatorLambdaFunction.Arn

